<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
     integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
     crossorigin=""/>
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
     integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
     crossorigin=""></script>
    <link rel="stylesheet" href="/Styles/maps.css">
    <title>Real Time Location</title>
</head>
<body>
    <nav>
        <div class="logo">LockIt</div>
        <div class="nav-links">
            <a href="/">Home</a>
            <a href="#" class="contact-link" style="color: black;">Contact Us</a>
        </div>
    </nav>

    <div class="title">Real Time Location</div>
    <div id="map" style="height:500px; width:100vw; padding:10px"></div>

    <footer>
        <div class="footer-content">
            <div class="footer-logo">LockIt</div>
            <div class="footer-links">
                <a href="#">About Us</a>
                <a href="#">Services</a>
                <a href="#">Contact</a>
                <a href="#">Privacy Policy</a>
            </div>
        </div>
        <div class="copyright">
            <p>&copy; 2024 LockIt. All rights reserved.</p>
        </div>
    </footer>

<script>
    var map = L.map('map').setView([0,0], 17);

L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
    attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
}).addTo(map);


var lat=29.945564;
var lng=76.816046;

var slat=29.945562;
var slng=76.816041;

// function showLocation(){
//     navigator.geolocation.getCurrentPosition(locatedpos,errorfunc,{
//             enableHighAccuracy: true,
//             timeout: 1000,
//             maximumAge: 0
//         });
// }


// async function locatedpos(position){
//     slat = position.coords.latitude + 0.235043;
//     slng = position.coords.longitude + 0.457847;
//     console.log(slat);
//     console.log(slng);
//     console.log(position);
// }

// function errorfunc(){
//     console.log("There is some error");
// }

// showLocation();

navigator.geolocation.watchPosition(success, error, {
    enableHighAccuracy: true, // Use GPS and other high-accuracy methods
    timeout: 10000, // Maximum time to wait for a position update (in ms)
    maximumAge: 0 // Do not use a cached position
  });

let marker,circle;

var squareIcon = L.divIcon({
    className: 'custom-square-icon',
    iconSize: [10, 10],
});


function success(pos){

    lat=pos.coords.latitude;
    lng=pos.coords.longitude;

    const accuracy= pos.coords.accuracy;

    console.log(slat, slng);

    if(marker){
        map.removeLayer(marker);
        map.removeLayer(circle);
    }

    marker=L.marker([lat,lng]).addTo(map);
    circle=L.circle([lat,lng], { radius: 100}).addTo(map);

    L.marker([slat,slng], { icon: squareIcon }).addTo(map)
            .bindPopup('I am a square-shaped marker!');

    map.fitBounds(circle.getBounds());

    map.setView([lat,lng]);
    var distance = calculateDistance(lat, lng, slat, slng);
    console.log(distance);

// Check if the distance exceeds 100 meters
    if (distance > 100) {
    console.log("The cycle is outside fencing zone");
    const element = document.getElementById("map");
    element.style.border = "7px dotted red";
}

else{
    const element = document.getElementById("map");
    element.style.border = "0px";
}
}

setInterval(() => {
    const locationobj={
    lat: lat,
    long: lng,
}

// Send a POST request to the server
fetch('/api/user/updatelocation', {
    method: 'POST', // Specify the HTTP method as POST
    headers: {
        'Content-Type': 'application/json' // Specify that we're sending JSON
    },
    body: JSON.stringify(locationobj) // Convert the data to JSON
})
.then(response => {
    if (!response.ok) {
        throw new Error('Network response was not OK');
    }
    return response.text(); // Parse response (or use .json() for JSON responses)
})
.then(data => {
    console.log('Success:', data); // Handle success
})
.catch(error => {
    console.error('Error:', error); // Handle errors
});
}, 300000);
// Define the data you want to send


function calculateDistance(lat1, lon1, lat2, lon2) {
    var R = 6371e3; // Radius of the Earth in meters
    var φ1 = lat1 * Math.PI / 180; // φ, λ in radians
    var φ2 = lat2 * Math.PI / 180;
    var Δφ = (lat2 - lat1) * Math.PI / 180;
    var Δλ = (lon2 - lon1) * Math.PI / 180;

    var a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +
            Math.cos(φ1) * Math.cos(φ2) *
            Math.sin(Δλ / 2) * Math.sin(Δλ / 2);
    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));

    var distance = R * c; // in meters
    return distance;
}

// Get the distance between the two locations


function error(err){

    if(err.code===1){
        alert("Please allow geolocation access");
    }else{
        console.log("Error !!", err);
    }
}
</script>
</body>
</html>